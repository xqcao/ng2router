import { Operation, Plugin, VersionWorker } from './api';
import { ScopedCache } from './cache';
import { NgSwAdapter, NgSwFetch } from './facade';
import { Manifest } from './manifest';
import { Observable } from 'rxjs/Observable';
export declare class VersionWorkerImpl implements VersionWorker {
    scope: ServiceWorkerGlobalScope;
    manifest: Manifest;
    adapter: NgSwAdapter;
    cache: ScopedCache;
    private fetcher;
    private plugins;
    constructor(scope: ServiceWorkerGlobalScope, manifest: Manifest, adapter: NgSwAdapter, cache: ScopedCache, fetcher: NgSwFetch, plugins: Plugin<any>[]);
    refresh(req: Request): Observable<Response>;
    fetch(req: Request): Observable<Response>;
    setup(previous: VersionWorkerImpl): Observable<any>;
    cleanup(): Operation[];
    message(message: any): Operation[];
    push(data: any): void;
    showNotification(title: string, options?: Object): void;
}
