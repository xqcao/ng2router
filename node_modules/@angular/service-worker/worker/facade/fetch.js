import { Observable } from 'rxjs/Observable';
export var NgSwFetch = (function () {
    function NgSwFetch(scope, adapter) {
        this.scope = scope;
        this.adapter = adapter;
    }
    NgSwFetch.prototype.request = function (req) {
        var _this = this;
        var result = Observable.defer(function () { return Observable
            .fromPromise(_this
            .scope
            .fetch(req)); });
        return result;
    };
    NgSwFetch.prototype.refresh = function (req) {
        var request;
        if (typeof req == 'string') {
            request = this.adapter.newRequest(this._cacheBust(req));
        }
        else {
            request = this.adapter.newRequest(this._cacheBust(req.url), req);
        }
        return this.request(request);
    };
    NgSwFetch.prototype._cacheBust = function (url) {
        var bust = Math.random();
        if (url.indexOf('?') == -1) {
            return url + "?ngsw-cache-bust=" + bust;
        }
        return url + "&ngsw-cache-bust=" + bust;
    };
    return NgSwFetch;
}());
//# sourceMappingURL=fetch.js.map