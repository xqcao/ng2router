import { Observable } from 'rxjs/Observable';
export var NgSwCacheImpl = (function () {
    function NgSwCacheImpl(caches, adapter) {
        this.caches = caches;
        this.adapter = adapter;
    }
    NgSwCacheImpl.prototype.normalize = function (req) {
        if (typeof req == 'string') {
            return this.adapter.newRequest(req);
        }
        return req;
    };
    NgSwCacheImpl.prototype.load = function (cache, req) {
        var _this = this;
        return Observable.defer(function () { return Observable.fromPromise(_this
            .caches
            .open(cache)
            .then(function (cache) { return cache.match(_this.normalize(req)); })); });
    };
    NgSwCacheImpl.prototype.store = function (cache, req, resp) {
        var _this = this;
        return Observable.defer(function () { return Observable.fromPromise(_this
            .caches
            .open(cache)
            .then(function (cache) { return cache.put(_this.normalize(req), resp); })); });
    };
    NgSwCacheImpl.prototype.remove = function (cache) {
        var _this = this;
        return Observable.defer(function () { return Observable.fromPromise(_this
            .caches
            .delete(cache)); });
    };
    return NgSwCacheImpl;
}());
//# sourceMappingURL=cache.js.map