import { rewriteUrlInstruction } from '@angular/service-worker/worker';
export function RouteRedirection() {
    return function (worker) { return new RouteRedirectionImpl(worker); };
}
export var RouteRedirectionImpl = (function () {
    function RouteRedirectionImpl(worker) {
        this.worker = worker;
    }
    Object.defineProperty(RouteRedirectionImpl.prototype, "routeManifest", {
        get: function () {
            return this.worker.manifest['routing'];
        },
        enumerable: true,
        configurable: true
    });
    RouteRedirectionImpl.prototype.setup = function (operations) {
        // No setup needed.
    };
    RouteRedirectionImpl.prototype.fetch = function (req, ops) {
        var manifest = this.routeManifest;
        if (!manifest || !manifest.routes) {
            return;
        }
        if (req.url === '/') {
            // TODO(alxhub): configurable base url
            ops.unshift(rewriteUrlInstruction(this.worker, req, manifest.index));
        }
        var matchesRoutingTable = Object.keys(manifest.routes).some(function (route) {
            var config = manifest.routes[route];
            return config.prefix
                ? req.url.indexOf(route) === 0
                : req.url === route;
        });
        if (matchesRoutingTable) {
            ops.unshift(rewriteUrlInstruction(this.worker, req, manifest.index));
        }
    };
    return RouteRedirectionImpl;
}());
//# sourceMappingURL=index.js.map