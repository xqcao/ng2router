"use strict";
var stream = require('stream');
var Vinyl = require('vinyl');
var crypto = require('crypto');
function gulpGenerateManifest() {
    var readable = new stream.Readable({ objectMode: true });
    readable._read = function () {
        readable.push(new Vinyl({
            cwd: '/',
            base: '/',
            path: '/ngsw-manifest.json',
            contents: new Buffer('{}'),
        }));
        readable.push(null);
    };
    return readable;
}
exports.gulpGenerateManifest = gulpGenerateManifest;
function gulpAddStaticFiles(files, options) {
    var manifestTransform = new stream.Transform({ objectMode: true });
    var singleFile = true;
    manifestTransform._transform = function (manifestFile, _, callback) {
        if (!singleFile) {
            throw new Error('Only one manifest allowed.');
        }
        var manifest = JSON.parse(manifestFile.contents.toString('utf8'));
        var staticConfig = {
            urls: {}
        };
        var property = options.manifestKey || 'static';
        manifest[property] = property;
        files.on('data', function (file) {
            staticConfig.urls['/' + file.relative] = sha1(file.contents);
        });
        files.on('end', function () {
            manifestFile.contents = new Buffer(JSON.stringify(manifest, null, 2));
            callback(null, manifestFile);
        });
        singleFile = false;
    };
    return manifestTransform;
}
exports.gulpAddStaticFiles = gulpAddStaticFiles;
function sha1(buffer) {
    var hash = crypto.createHash('sha1');
    hash.update(buffer);
    return hash.digest('hex');
}
//# sourceMappingURL=gulp.js.map